name: Build

on:
    push:
        branches: [master]
    pull_request:
    release:
        types: [created]

jobs:
    tests:
        runs-on: ubuntu-latest
        name: Build and test
        strategy:
            fail-fast: false
            matrix:
                php: ["8.2"]
                operating-system: [ ubuntu-latest ]
                composer-flags: [""]
                composer-extras: [""]
                stability: ["stable"]
                include:
                    -   php: "8.2"

        env:
            COMPOSER_ROOT_VERSION: dev-master

        steps:
            -   uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-values: "phar.readonly=0"

            -   name: Install composer extras
                if: matrix.composer-extras != ''
                run: composer require ${{ matrix.composer-extras }} --no-update

            -   name: Update the minimum stability
                if: matrix.stability == 'dev'
                run: composer config minimum-stability ${{ matrix.stability }}

            -   name: Locate composer cache
                id: composercache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v2
                env:
                    cache-name: cache-composer
                with:
                    path: ${{ steps.composercache.outputs.dir }}
                    key: ${{ hashFiles('composer.json') }}

            -   name: Install composer dependencies
                run: composer update ${{ matrix.composer-flags }}

            -   name: Run static analysis (phpstan)
                if: matrix.composer-flags != '--prefer-lowest'
                run: ./vendor/bin/phpstan analyse -c phpstan.neon --memory-limit 1G

            -   name: Run tests (phpspec)
                run: ./vendor/bin/phpspec run --format=dot

            -   name: Run tests (phpunit)
                run: ./vendor/bin/phpunit -v
